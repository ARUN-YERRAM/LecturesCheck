Actual forum. And our project is lecture sec where there is an existing problem there is an existing LLM where we need to add an LLM for supporting the LMS learning management system. And LMS consists of it is belong to the it is belong to the Duke State industry and the management of the Duke share industry uploads the required videos as well as supporting documents for that videos so that students can study. And then. But the problem is with, but the problem with that is the lectures of management can't identify that the content in both the videos as well as the uploaded files is driven or not. And our task is to create create an LM so that it supports the MS so that whenever the management uploads the videos as well as the necessary and the supporting documents, the LLM extract compares the data from the video as well as from the file and it saves the insights and analyze content to the management. And then later on they can take the decision to keep the video in their LMS or delete. And these are problem statement. And the tech stack we have used for project is Monstack. So whereas MongoDB we have used for storing the details of the videos as well as the files and the Express is a J's library and react is a framework, front end framework which are used for creating the print end part. And now this is the JavaScript library which is used for back end. And in our project there we have basically four components, uploading video PDF as well as uploading video and PDF as the first and second parts where uploading PDF the user is actually asked to fill the form, the title as well as to choose a file from their local directory and they can upload the video or PDF's and they can click on the submit button and then whenever they click on the submit button, the videos are the files uploaded successfully and then later on they can upload the video part and same title along with the file. Then you have to choose and then the submit. These are stored in the Mongo, these details are stored in the MongoDB and the main file and the videos are stored in the local directory of the project. The next part is that we need to summarize the content, both the files as well as the video part video then for the for the file there, whenever the management uploads, then the details, the files are stored here and the details are stored in the MongoDB. And then we have created an LLM so that this LLM asks the list of LLMs to LLMs to which are present in the market to choose and whenever we choose that then it we need to select the LLM and then we need to select the PDF which is in the directory and then after some seconds it creates a text file along with the file name txT and it extract the important insights from the file and it stores in. Txt file in the same folder. Even it is same for the video. The pipe part is here in the local directory. These are text file which is summarized one for the IML content and for the video part. This is a eleven one where for the video they need to upload a URL and is a code for that one. And whenever the management uploads the URL then the detail notes are given on the UI and these details these details are stored in the file name video thumbnail name txt the local directory and now the video part. Video video is summarized and it is stored in the. Txt file summarized and it is showing the. Txt file now main thing is, I mean to display them analyze part whether there is a relevancy between these two contents or not. And this is uh. This is for the video part which is summarized one, is both and now and now into convenient extra we need to compare the text file for of the video as well as the file part and now it asks for it. Ask it ask the users to select the two files and it may be any file or text file or any ppt or anything and whenever the user selects and then they whenever he clicks on the submit but submit button then there is a chart shown to the user relating to the PDF's you uploaded and bar chart python and normal graph to show the relevancy trend between the both of within the contents. Upload between the contents which are printed in the uploaded PDF's or text files and as you see on I uploaded the same file in the both the cases. So the relevancy trend is 100% and if you upload different files it shows exact accuracy value relevancy between both the content and main and the upcoming of your computer project up to this extent and later on we are working on to upload to improve the UI part so the management whenever the visits they can go on smoothly. So upload the video and then upload the PDF and then they click on whenever they click on the submit button. The UI should be seen shown to the management in this way so that they can easily analyze in the form because anyone can understand easily analyze part in the form of charts. So we decided, we decided to show show the content to the user in the in the form of charts and we are working on to connect the screens so the product is in the flow. And even this is the main thing which I was asked in the problem statement and these last output so that the management or the faculties of the lms of Duke State University can easily understand and they can later on they can take decision. If the revenue is not good as they are thought, then they can delete the video and the details are deleted from everywhere. If they are happy, then they can move on and they can store that in the LMS and the users can see the video and view the PDF and thank you. And our project is done up to some extent and we are working on to improve the schemes and that's it. Thank you, bye.