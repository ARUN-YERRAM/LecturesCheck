Hello guys, myself Arun and our project is lecture sec where there is an existing LLM with a fictitious university named Duke State University. And then we need to upgrade the LLMDh lms with the LLM so that management, whenever they upload the video as well as the supporting documents to the LMS, the users who are the students can easily study. And there's an issue with that one because whenever the management uploads the video and the video as well as the files into the LMS, they are unable to recognize the main exact relation, whether the data is the data in the video and the data in the file is related or nothing. And then we from that point we need to create an alum so that it covers that gap and our LLM should pick the data from the video, extract the data from the video as well as from the file and then compare the data between both these and then show the analyze analyze content in the form of graph so that the management who uploads a video into their LLM can easily understand and they can take decisions and then proceed forward. And these are problem statement and further problem we have used tech stack stack MongoDB first showing the details of the videos as well as the files in the backend and express the library of JavaScript for middleware and React is a UI library which we have used for the development of UI and node js is the is a runtime environment for the JavaScript for using in the backend part and and our project as especially four parts, uploading PDF and uploading video the first and second parts where the users, the management especially asked to enter the video as to upload the video and the PDF they enter the title of the PDF as well as they choose a PDF from the local directory and they click on the submit button. Then these are stored in the details are stored in the MongoDB and this file is stored in the local directory the project and then they upload the video and same the details are entered and they whenever they submit the details are stored in the MongoDB and the videos stored in the local directory of the project. I will show you as we proceed. And these are two components and next thing we need to do that we need extract the data from the video as well as from the file and then we to sum up and summarize and then display it to the user, especially the management so that they can understand that the uploaded content is good or not, they are related to each other or not and then they can take for further decision and then move on unless content or acupuncture is not relevancy, content is not too high, then they will delete else they will move forward and they upload other videos and files. And these are file summarize code sir in which it selects the file and it sum up summarizes and it creates a. Txt file along with the file name txt and it stores a local directory and this is a text which is summarized from the file and the text file is saved to the local directory. I selected the IML two unit, one PDF and it has created along the same name txt file and it is showed to the local directory where the PDF is summarized and the details and the insights of the file are stored and it is same done for the video part this is the video code. It shows us the graphs which we after we analyze the video part and this is the code for the video part where the user the management uploads a video or the YouTube URL link which are english captions. Then the video summarize and along with the video name txt it is showed in the local directory. The important insights from the video are summarized and it is saved to the local directory, which is it is and it is an LLM same. It is an example in which video is a URL is uploaded and it summarizes and it stores the local directory. Now up to now we have summarized we have uploaded the file video and then we have checked the data from the video part and stored in a. Txt file and we uploaded or extracted the video file data from the file and we have saved the. Txt file. Now we need to summarize which is the main part, which is the fourth part summarize and analyze and show display to the user, especially the management so that they can take further decision and move on. And this is the one it asks to select the two files from the local directory and the management need to select and then when they click on the revenue part and they can change the dark mode or light mode whenever they click on the relevance part, then these charts are displayed to the user depending on the file content bar chart by chart and normal chart in which it is show that the relevancy between the relevancy and non invincible between both the files as I uploaded the same files both the time so the relevancy is 100 percentage and even we can see it here as so that the users can understand easily in the form of chart and as well as the relevancy percentage in the case if I upload two different files and it is not 700%. If it is true or the content is matching then it shows the relevancy accordingly. And let's go through a project I'll show you dry run my project. These are project main part is a home section about the section and the upload section so that the management when I click on upload section then they are asked then they can view the PDF's as well as the videos and whenever they upload a PDF I'm uploading a file file again a title name and I'm choosing the file from my local directory example I will select the react nodes and it's a PDF file. Now it's open. Then whenever click on submit button then the videos uploaded successfully and then automatically it is displayed on the UI so the management can view properly with the what are the PDF's and files you uploaded previously and up to now? And when they scroll down it is upload video option they can enter the video name or anything. Right now I'm giving v three and they need to select the choose file or choose video and even it selects only video part just need to update the UI and when they click on open and submit then the video submitted successfully and now these details are stored in the MongoDB and now the video is created. I know I uploaded this video right now and it is that it is spread and the main thing is that we need to add in the UI in a proper manner and we need to attach the schemes in a continuous manner so that whenever the user enters into application they the transition smoothly and they upload the video and the PDF and then next but next they see a summarize button whenever they click on the summarize button then the relevancy is stored in the form of start and the number so that the management can understand easily and these are part whenever I know it is a it is the part where data relevancy is checked. It asks us to select the files text files and it is a text file. Right now I will select two different files and in the previous case I have shown you in the ppd I have selected the both theme files I am selecting different files, entirely different files now it shows us summarized content when we click on unless then there is no too much relevancy between both these files. As you can see there is only 3.12 percentage of fluency the data present in this file and in this file and red color is a non inventory and low is the as we can see as these are two different files the inventory is less and there's a the manager can understand easily and they can take decision and they can move forward. And if they are not satisfied with that, then they can delete the uploaded PDF as well as the document video, as well as the document from the LLM and the LMS, and they can move on and they can upload different video, or they can modify the content and they can upload and they can take their own decision. And even it's that one in which I uploaded two same files, so the redundancy generate percentage, and that's it. And right now we are working to improve the screens especially, and to connect the component so that it goes whenever the user starts to use application, they go the transition from the Danish into the project smoothly, and that's it.